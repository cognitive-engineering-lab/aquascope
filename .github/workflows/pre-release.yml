name: pre-release

on:
  pull_request:
    branches:
      - "main"
    types: [opened,labeled,synchronize]

env:
  IMAGE_TAG: aquascope:latest

jobs:
  test-authentication:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Ping remote
        uses: ./.github/workflows/run-on-remote
        with:
          file: deploy/ping.sh
          credentials: ${{ secrets.GOOGLE_CREDENTIALS }}
          project-id: ${{ secrets.GOOGLE_PROJECT_ID }}
          ssh-key: ${{ secrets.GOOGLE_SSH_PRIVATE_KEY }}

  check-publishable-versions:
    if: contains(github.event.pull_request.labels.*.name, 'release')
    runs-on: ubuntu-latest
    env:
      LISP: ccl-bin
    steps:
      - run: echo Skipping silently
      # - uses: actions/checkout@v3
      # - uses: 40ants/setup-lisp@v2
      #   with:
      #     asdf-system: cl-info
      # - name: Get Previous tag
      #   id: previoustag
      #   uses: WyriHaximus/github-action-get-previous-tag@v1
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      # - name: Validate Version
      #   run: |
      #     cd scripts
      #     ros versioning.ros check ${{ steps.previoustag.outputs.tag }}

  build-artifacts-and-restart:
    if: contains(github.event.pull_request.labels.*.name, 'release')
    needs: [check-publishable-versions,test-authentication]
    runs-on: ubuntu-20.04
    env:
      AQUASCOPE_SERVER: "https://aquascope.willcrichton.net"
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 412.0.0'
      - name: Quick Setup
        uses: ./.github/workflows/quick-setup
      - name: Build frontend and docs
        run: |
          cargo doc --lib
          cd frontend
          graco build
          mv ../target/doc packages/aquascope-standalone/dist/doc
      - name: Build and save docker image
        run: |
          docker build --tag "${IMAGE_TAG}" .
          docker save --output image.tar "${IMAGE_TAG}"
      - name: Build Aquascope serve
        run: cargo build -p aquascope_serve --locked --release
      - name: Zip artifacts
        uses: montudor/action-zip@v1
        with:
          args: zip artifacts.zip ./image.tar ./target/release/aquascope_serve
      - name: Upload artifacts
        run: gcloud compute scp artifacts.zip gh-actions@aquascope:~/ --zone us-central1-a --tunnel-through-iap
      - uses: JamesIves/github-pages-deploy-action@v4.3.0
        with:
          branch: gh-pages
          folder: ./frontend/packages/aquascope-standalone/dist
          clean: true
          clean-exclude: dev
      - name: Restart server
        uses: ./.github/workflows/run-on-remote
        with:
          file: deploy/update.sh
          credentials: ${{ secrets.GOOGLE_CREDENTIALS }}
          project-id: ${{ secrets.GOOGLE_PROJECT_ID }}
          ssh-key: ${{ secrets.GOOGLE_SSH_PRIVATE_KEY }}

