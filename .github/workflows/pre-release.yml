name: pre-release

on:
  pull_request:
    branches:
      - "main"
    types: [opened,labeled,synchronize]

env:
  IMAGE_TAG: aquascope:latest

jobs:
  test-gcloud-connection:
    runs-on: ubuntu-20.04
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
      - name: Restart server
        uses: google-github-actions/ssh-compute@v0
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          zone: 'us-central1-a'
          instance_name: aquascope
          ssh_private_key: ${{ secrets.GOOGLE_SSH_PRIVATE_KEY }}
          command: './aquascope/deploy/test.sh'
          # script: './deploy/update.sh'
          ssh_args: 'LC_TOKEN="hello-remote"'

  check-publishable-versions:
    # if: contains(github.event.pull_request.labels.*.name, 'release')
    if: ${{ false }}
    runs-on: ubuntu-latest
    env:
      LISP: ccl-bin
    steps:
      - run: echo Skipping silently
      # - uses: actions/checkout@v3
      # - uses: 40ants/setup-lisp@v2
      #   with:
      #     asdf-system: cl-info
      # - name: Get Previous tag
      #   id: previoustag
      #   uses: WyriHaximus/github-action-get-previous-tag@v1
      #   env:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      # - name: Validate Version
      #   run: |
      #     cd scripts
      #     ros versioning.ros check ${{ steps.previoustag.outputs.tag }}

  build-artifacts:
    if: contains(github.event.pull_request.labels.*.name, 'release')
    needs: check-publishable-versions
    runs-on: ubuntu-20.04
    env:
      AQUASCOPE_SERVER: "https://aquascope.willcrichton.net"
    steps:
      - uses: actions/checkout@v3
      - name: Quick Setup
        uses: ./.github/workflows/quick-setup
      - name: Build frontend and docs
        run: |
          cargo doc --lib
          cd frontend
          graco build
          mv ../target/doc packages/aquascope-standalone/dist/doc
      - name: Build and save docker image
        run: |
          docker build --tag "${IMAGE_TAG}" .
          docker save --output image.tar "${IMAGE_TAG}"
      - name: Build Aquascope serve
        run: cargo build -p aquascope_serve --locked --release
      - name: Upload standalone and docs
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./frontend/packages/aquascope-standalone/dist
          retention-days: 5
      - name: Upload server artifacts
        uses: actions/upload-artifact@v2
        with:
          name: server-artifacts
          path: |
            ./image.tar
            ./target/release/aquascope_serve
          retention-days: 5

  publish-standalone-and-docs:
    if: contains(github.event.pull_request.labels.*.name, 'release')
    needs: build-artifacts
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist
      - name: Display structure of downloaded files
        run: ls -R
      - uses: JamesIves/github-pages-deploy-action@v4.3.0
        with:
          branch: gh-pages
          folder: ./dist
          clean: true
          clean-exclude: dev

  update-server:
    if: contains(github.event.pull_request.labels.*.name, 'release')
    needs: build-artifacts
    runs-on: ubuntu-20.04
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
      - name: Restart server
        uses: google-github-actions/ssh-compute@v0
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
          instance_name: aquascope
          ssh_private_key: ${{ secrets.GOOGLE_SSH_PRIVATE_KEY }}
          command: 'export GITHUB_TOKEN=$GITHUB_TOKEN && ./aquascope/deploy/update.sh'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crate:
    if: contains(github.event.pull_request.labels.*.name, 'release')
    needs: [publish-standalone-and-docs,update-server]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-workspaces
          version: latest
          use-tool-cache: true
      - run: cargo login ${{ secrets.CRATES_IO_TOKEN }}
      - name: Quick Setup
        uses: ./.github/workflows/quick-setup
      - uses: actions-rs/cargo@v1
        with:
          command: ws
          args: publish --from-git --yes
